DML (link)Query 1# Top 5 Most Popular Properties with Host DetailsSELECT CONCAT(H.Host_first_name, ' ', H.Host_last_name) AS Host_name, P.Title, P.Property_description, COUNT(B.Booking_id) AS Num_of_bookingsFROM Properties P, Hosts H, Bookings B, Locations LWHERE H.Host_id=P.Host_idAND P.Property_id=B.Property_idAND L.Location_id=P.Location_idGROUP BY Host_name, P.Title, P.Property_descriptionORDER BY Num_of_bookings DESCLIMIT 5;Query 2# Number of properties by city and its average nighly priceSELECT L.City, ROUND(AVG(P.Price_night)) AS Avg_price, COUNT(P.Property_id) AS Num_of_propertiesFROM Properties P, Locations LWHERE L.Location_id=P.Location_idGROUP BY L.CityORDER BY Num_of_Properties DESC, Avg_Price;Query 3# Guests Who Booked for More Than 5 Days in TotalSELECT G.First_name, SUM(B.Check_out_date-B.Check_in_date) AS Total_stayFROM Guests G, Bookings BWHERE G.Identity_number=B.Identity_numberGROUP BY G.First_nameHAVING Total_stay>5ORDER BY Total_stay DESC;Query 4# Number of bookings by type of propertySELECT P.Property_type, COUNT(Booking_id) AS Num_of_bookings, SUM(P.Num_beds) AS Total_beds, SUM(P.Num_bathrooms) AS Total_bathroomsFROM Properties P, Bookings BWHERE P.Property_id=B.Property_idGROUP BY P.Property_typeORDER BY Num_of_bookings DESC;Query 5# Top 3 Cities with the Highest Average Review Score for PropertiesSELECT L.City, ROUND(AVG(GR.Guest_rating),2) AS Avg_review_scoreFROM Locations L, Properties P, Review_by_guests GR, Bookings BWHERE B.Booking_id=GR.Booking_idAND P.Property_id=B.Property_idAND L.Location_id=P.Location_idGROUP BY L.CityORDER BY Avg_review_score DESCLIMIT 3;Query 6# Properties with Above Average Reviews and Their Booking FrequencySELECT P.Title, P.Price_night, COUNT(B.Booking_id) AS Booking_count, GR.Guest_ratingFROM Properties P, Bookings B, Review_by_guests GRWHERE P.Property_id=B.Property_idAND B.Booking_id=GR.Booking_idAND GR.Guest_rating > (SELECT AVG(Guest_rating) FROM Review_by_guests)GROUP BY P.Title, P.Price_night, GR.Guest_ratingORDER BY GR.Guest_rating DESC, P.Price_night ASC;Query 7# Top 5 Most Frequent Booking Months SELECT     YEAR(b.Check_in_date) AS Year,    MONTHNAME(b.Check_in_date) AS Month,    COUNT(b.Booking_id) AS Num_of_bookingsFROM     Bookings bGROUP BY     Year, MonthORDER BY     Num_of_bookings DESCLIMIT 5;Query 8# Guests Who Booked Both Superhost and Regular Host PropertiesINSERT INTO Hosts (host_id, host_type) VALUES('H001', 'TypeA'),('H002', 'TypeB')ON DUPLICATE KEY UPDATE host_type = VALUES(host_type);INSERT INTO Properties (property_id, host_id) VALUES(1, 'H001'),(2, 'H002')ON DUPLICATE KEY UPDATE host_id = VALUES(host_id);INSERT INTO Guests (identity_number, First_name) VALUES('ID001', 'Tom'),('ID002', 'Jane')ON DUPLICATE KEY UPDATE First_name = VALUES(First_name);INSERT INTO Bookings (booking_id, identity_number, property_id) VALUES(101, 'ID001', 1),(102, 'ID001', 2),(103, 'ID002', 1)ON DUPLICATE KEY UPDATE identity_number = VALUES(identity_number), property_id = VALUES(property_id);SELECT GuestBookings.First_nameFROM (    SELECT g.identity_number, g.First_name, h.host_type    FROM Guests g    JOIN Bookings b ON g.identity_number = b.identity_number    JOIN Properties p ON b.property_id = p.property_id    JOIN Hosts h ON p.host_id = h.host_id) AS GuestBookingsGROUP BY identity_number, First_nameHAVING COUNT(DISTINCT host_type) > 1;Query 9# Superhosts with the Highest Average Nightly Price for Their PropertiesSELECT     h.Host_id,    h.Host_first_name,    h.Host_last_name,    AVG(p.Price_night) AS Average_Nightly_PriceFROM     Hosts hJOIN     Properties p ON h.Host_id = p.Host_idWHERE     h.Host_type = 'Superhost'GROUP BY     h.Host_id, h.Host_first_name, h.Host_last_nameORDER BY     Average_Nightly_Price DESC;Query 10#  Find the total number of properties listed by Superhosts by region.SELECT l.Region, COUNT(p.Property_id) AS Total_properties_by_superhostsFROM Properties pJOIN Hosts h ON p.Host_id = h.Host_idJOIN Locations l ON p.Location_id = l.Location_idWHERE h.Host_type = 'Superhost'GROUP BY l.Region;Query 11# Retrieve the names of guests who have booked properties with a pool amenity.SELECT DISTINCT g.First_name, g.Last_nameFROM Guests gJOIN Bookings b ON g.Identity_number = b.Identity_numberJOIN Properties_amenities pa ON b.Property_id = pa.Property_idJOIN Amenities a ON pa.Amenity_id = a.Amenity_idWHERE a.Amenity_name = 'Pool';Query 12# Find the total amount paid by each guest for their bookings.SELECT g.First_name, g.Last_name, SUM(p.Amount) AS TotalAmountPaidFROM Guests gJOIN Bookings b ON g.Identity_number = b.Identity_numberJOIN Payments p ON b.Booking_id = p.Booking_idGROUP BY g.First_name, g.Last_nameORDER BY TotalAmountPaid desc;Query 13# Monthly Revenue for Each Property in the Last YearSELECT     p.Property_id,    p.Title,    MONTH(b.Check_in_date) AS Month,    YEAR(b.Check_in_date) AS Year,    SUM(pa.Amount) AS MonthlyRevenueFROM     Properties pJOIN     Bookings b ON p.Property_id = b.Property_idJOIN     Payments pa ON b.Booking_id = pa.Booking_idWHERE     b.Check_in_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 1 YEAR) AND CURDATE()GROUP BY     p.Property_id,     MONTH(b.Check_in_date),     YEAR(b.Check_in_date)ORDER BY     p.Property_id,     YEAR(b.Check_in_date) DESC,     MONTH(b.Check_in_date) DESC;Query 14# Properties with No Bookings in the Last 6 MonthsSELECT     p.Title,    IFNULL(TIMESTAMPDIFF(MONTH, MAX(b.Check_in_date), CURDATE()), 'Never booked') AS Months_since_last_bookingFROM     Properties pLEFT JOIN     Bookings b ON p.Property_id = b.Property_idGROUP BY     p.Property_id, p.TitleHAVING    MAX(b.Check_in_date) IS NULL OR Months_since_last_booking > 6;Query 15# Retrieve the total number of bookings for each property SELECT p.Property_id, p.Title, COUNT(b.Booking_id) AS TotalBookingsFROM Properties pLEFT JOIN Bookings b ON p.Property_id = b.Property_idGROUP BY p.Property_id, p.TitleORDER BY TotalBookings DESC;Query 16# Total Revenue By Property TypeSELECT     Property_type,    SUM(Amount) AS Total_revenueFROM     Properties pJOIN     Bookings b ON p.Property_id = b.Property_idJOIN     Payments pa ON b.Booking_id = pa.Booking_idGROUP BY     Property_type;Query 17# Top 5 Guests Who Spent The Most on BookingSELECT     g.First_name,    g.Last_name,    SUM(pa.Amount) AS Total_spentFROM     Guests gJOIN     Bookings b ON g.Identity_number = b.Identity_numberJOIN     Payments pa ON b.Booking_id = pa.Booking_idGROUP BY     g.Identity_number, g.First_name, g.Last_nameORDER BY     Total_spent DESCLIMIT 5;Query 18# Average Booking Duration By Property TypeSELECT     Property_type,    AVG(DATEDIFF(Check_out_date, Check_in_date)) AS Avg_booking_durationFROM     Properties pJOIN     Bookings b ON p.Property_id = b.Property_idGROUP BY     Property_type;Query 19# Properties with the Highest Number of AmenitiesSELECT     p.Title,    COUNT(pa.Amenity_id) AS Num_of_amenitiesFROM     Properties pJOIN     Properties_amenities pa ON p.Property_id = pa.Property_idGROUP BY     p.Property_id, p.TitleORDER BY     Num_of_amenities DESC;Query 20# Average Review Score By Property Type and CItySELECT     p.Property_type,    l.Country,    AVG(r.Guest_rating) AS Avg_review_scoreFROM     Properties pJOIN     Locations l ON p.Location_id = l.Location_idLEFT JOIN     Bookings b ON p.Property_id = b.Property_idLEFT JOIN     Review_by_guests r ON b.Booking_id = r.Booking_idGROUP BY     p.Property_type, l.Country;